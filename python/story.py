import os
import time 
from time import sleep
import sys
import math

def clear_console():
    if os.name == 'posix':  # For Linux and macOS
        os.system('clear')
    elif os.name == 'nt':  # For Windows
        os.system('cls')

def typing_Ani(text, speed):
        string = text;
        for letter in string:
            sleep(speed) 
            sys.stdout.write(letter)
            sys.stdout.flush()
        print("")
        

def Item_Typing_Ani(list, speed):
    for item in list:
        typing_Ani(item, speed)
    print("")


def print_story():
    Item_Typing_Ani(["January 31st, 2023. You went to Jeju Island for 'Kentech preview'"], 0.03)
    sleep(1)
    Item_Typing_Ani(['While taking a walk near Seob-ji-ko-ji, you found a cave on the beach and decided to explore.'], 0.03)
    sleep(1)
    Item_Typing_Ani(['There was a large cave painting. You went deeper, as if you were being attracted by something...'], 0.03)

    

def show_title():
    cryptic = """"              
  / 
 / 
/ 


0
   _
  / 
 / 
/ 
\\

0
   ___               
  / __
 / / 
/ /
\_

0
   ___                
  / __\ 
 / / | 
/ /__
\___

0         
   ___                
  / __\ 
 / / | '
/ /__| 
\____/

0        
   ___              
  / __\ __
 / / | '__
/ /__| | 
\____/_|   

0         
   ___               
  / __\ __ _
 / / | '__| 
/ /__| |  | 
\____/_|   

0           
   ___                
  / __\ __ _  
 / / | '__| | 
/ /__| |  | |
\____/_|   \\

0          
   ___                
  / __\ __ _   _ 
 / / | '__| | |
/ /__| |  | |_|
\____/_|   \__
           |_
0
   ___                 
  / __\ __ _   _ _
 / / | '__| | | | 
/ /__| |  | |_| 
\____/_|   \__, 
           |___
0  
   ___                
  / __\ __ _   _ _ _
 / / | '__| | | | '
/ /__| |  | |_| | |
\____/_|   \__, | 
           |___/|
0
   ___                 
  / __\ __ _   _ _ __ 
 / / | '__| | | | '_ 
/ /__| |  | |_| | |_
\____/_|   \__, | .
           |___/|_|
0           
   ___                 
  / __\ __ _   _ _ __ 
 / / | '__| | | | '_ \\
/ /__| |  | |_| | |_)
\____/_|   \__, | ._
           |___/|_|
0          
   ___                 _  
  / __\ __ _   _ _ __ | 
 / / | '__| | | | '_ \| 
/ /__| |  | |_| | |_) | 
\____/_|   \__, | .__/ 
           |___/|_|
0          
   ___                 _   
  / __\ __ _   _ _ __ | |_
 / / | '__| | | | '_ \| __
/ /__| |  | |_| | |_) | |
\____/_|   \__, | .__/ \\
           |___/|_|
0          
   ___                 _   _
  / __\ __ _   _ _ __ | |_(
 / / | '__| | | | '_ \| __|
/ /__| |  | |_| | |_) | |_
\____/_|   \__, | .__/ \_
           |___/|_|
0
   ___                 _   _
  / __\ __ _   _ _ __ | |_(_)
 / / | '__| | | | '_ \| __| 
/ /__| |  | |_| | |_) | |_| 
\____/_|   \__, | .__/ \__|_
           |___/|_|
0           
   ___                 _   _
  / __\ __ _   _ _ __ | |_(_) 
 / / | '__| | | | '_ \| __| |
/ /__| |  | |_| | |_) | |_| | 
\____/_|   \__, | .__/ \__|_
           |___/|_|
0           
   ___                 _   _
  / __\ __ _   _ _ __ | |_(_) _
 / / | '__| | | | '_ \| __| |/ 
/ /__| |  | |_| | |_) | |_| | 
\____/_|   \__, | .__/ \__|_|\\
           |___/|_|
0           
   ___                 _   _
  / __\ __ _   _ _ __ | |_(_) __
 / / | '__| | | | '_ \| __| |/ 
/ /__| |  | |_| | |_) | |_| | (_
\____/_|   \__, | .__/ \__|_|\_
           |___/|_|
0           
   ___                 _   _
  / __\ __ _   _ _ __ | |_(_) ___
 / / | '__| | | | '_ \| __| |/ _
/ /__| |  | |_| | |_) | |_| | (__
\____/_|   \__, | .__/ \__|_|\___
           |___/|_|
0           
   ___                 _   _
  / __\ __ _   _ _ __ | |_(_) ___
 / / | '__| | | | '_ \| __| |/ __|
/ /__| |  | |_| | |_) | |_| | (__
\____/_|   \__, | .__/ \__|_|\___|
           |___/|_|
"""
    cryptics = []
    cryptics = cryptic.split(sep='0')
    catacomb = """
    
        ___
    / 
    / 
    / 
    \_
    0
    ___   
    / __\\
    / /  
    / /_
    \____

    0
    ___      
    / __\__
    / /  / 
    / /__| (_
    \____/\_

    0
    ___     
    / __\__ _| 
    / /  / _` 
    / /__| (_| 
    \____/\__,_

    0
    ___      _
    / __\__ _| |
    / /  / _` | 
    / /__| (_| |
    \____/\__,_

    0
    ___      _   
    / __\__ _| |_
    / /  / _` | _
    / /__| (_| | 
    \____/\__,_|\_

    0
    ___      _                           
    / __\__ _| |_ _
    / /  / _` | __/ 
    / /__| (_| | || (
    \____/\__,_|\__\_

    0
    ___      _       
    / __\__ _| |_ __ 
    / /  / _` | __/ _` 
    / /__| (_| | || (_
    \____/\__,_|\__\__

    0
    ___      _                
    / __\__ _| |_ __ _ 
    / /  / _` | __/ _` 
    / /__| (_| | || (_| 
    \____/\__,_|\__\__,_

    0
    ___      _                          
    / __\__ _| |_ __ _  
    / /  / _` | __/ _` |
    / /__| (_| | || (_| |
    \____/\__,_|\__\__,_|

    0
    ___      _              
    / __\__ _| |_ __ _  
    / /  / _` | __/ _` |/
    / /__| (_| | || (_| | 
    \____/\__,_|\__\__,_|\\

    0
    ___      _                          
    / __\__ _| |_ __ _  _
    / /  / _` | __/ _` |/ 
    / /__| (_| | || (_| | (
    \____/\__,_|\__\__,_|\\
    0
    ___      _                       
    / __\__ _| |_ __ _  __  
    / /  / _` | __/ _` |/ __/
    / /__| (_| | || (_| | (_
    \____/\__,_|\__\__,_|\__
    0
    ___      _                          
    / __\__ _| |_ __ _  ___ 
    / /  / _` | __/ _` |/ __/
    / /__| (_| | || (_| | (_| 
    \____/\__,_|\__\__,_|\___
    0
    ___      _                           
    / __\__ _| |_ __ _  ___ ___
    / /  / _` | __/ _` |/ __/ _
    / /__| (_| | || (_| | (_| (
    \____/\__,_|\__\__,_|\___\_
    0
    ___      _                           
    / __\__ _| |_ __ _  ___ ___  _
    / /  / _` | __/ _` |/ __/ _ \| 
    / /__| (_| | || (_| | (_| (_) 
    \____/\__,_|\__\__,_|\___\___
    0
    ___      _                         
    / __\__ _| |_ __ _  ___ ___  _ 
    / /  / _` | __/ _` |/ __/ _ \| '
    / /__| (_| | || (_| | (_| (_) | 
    \____/\__,_|\__\__,_|\___\___/|
    0
    ___      _                           
    / __\__ _| |_ __ _  ___ ___  _ _ 
    / /  / _` | __/ _` |/ __/ _ \| '_ 
    / /__| (_| | || (_| | (_| (_) | | 
    \____/\__,_|\__\__,_|\___\___/|_
    0
    ___      _                           
    / __\__ _| |_ __ _  ___ ___  _ __ 
    / /  / _` | __/ _` |/ __/ _ \| '_ ` 
    / /__| (_| | || (_| | (_| (_) | | |
    \____/\__,_|\__\__,_|\___\___/|_| 
    0
    ___      _                            
    / __\__ _| |_ __ _  ___ ___  _ __ __
    / /  / _` | __/ _` |/ __/ _ \| '_ ` 
    / /__| (_| | || (_| | (_| (_) | | | | 
    \____/\__,_|\__\__,_|\___\___/|_| |_|
    0
    ___      _                          
    / __\__ _| |_ __ _  ___ ___  _ __ ___
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ 
    / /__| (_| | || (_| | (_| (_) | | | | 
    \____/\__,_|\__\__,_|\___\___/|_| |_|
    0
    ___      _                            
    / __\__ _| |_ __ _  ___ ___  _ __ ___
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ 
    / /__| (_| | || (_| | (_| (_) | | | | | 
    \____/\__,_|\__\__,_|\___\___/|_| |_| 
    0
    ___      _                            
    / __\__ _| |_ __ _  ___ ___  _ __ ___ 
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \\
    / /__| (_| | || (_| | (_| (_) | | | | | 
    \____/\__,_|\__\__,_|\___\___/|_| |_| |
    0
    ___      _                            
    / __\__ _| |_ __ _  ___ ___  _ __ ___ |
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \|
    / /__| (_| | || (_| | (_| (_) | | | | | |
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| 
    / /__| (_| | || (_| | (_| (_) | | | | | | 
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |__  
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| '_ 
    / /__| (_| | || (_| | (_| (_) | | | | | | |_
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_._
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |__  
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| '_
    / /__| (_| | || (_| | (_| (_) | | | | | | |_) 
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_.__
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |__  
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| '_ \\
    / /__| (_| | || (_| | (_| (_) | | | | | | |_)
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_.__
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |__  _
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| '_ \/
    / /__| (_| | || (_| | (_| (_) | | | | | | |_) \_
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_.__/|
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |__  __
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| '_ \/ _
    / /__| (_| | || (_| | (_| (_) | | | | | | |_) \__
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_.__/|__
    0
    ___      _                            _
    / __\__ _| |_ __ _  ___ ___  _ __ ___ | |__  ___
    / /  / _` | __/ _` |/ __/ _ \| '_ ` _ \| '_ \/ __|
    / /__| (_| | || (_| | (_| (_) | | | | | | |_) \__ \\
    \____/\__,_|\__\__,_|\___\___/|_| |_| |_|_.__/|___/
    0

    
    
    
    """    
    catacombs = []
    catacombs = catacomb.split(sep='0')
    for i in range(22):
        clear_console()
        print(cryptics[i])
        print(catacombs[math.floor(i*32/22)])
        sleep(0.13)


def rule_description():
    sleep(1)
    clear_console()
    Item_Typing_Ani(["""Your goal is to escape from a dungeon called "Cryptic Catacombs".
You choose difficulty level from easy, medium, hard to extreme.
Each difficulty level provides different number of lives, and different size of the map.

Each turn, you can move in open directions using number input.
Whenever you move, you have a chance to encounter a monster, or find a mysterious chest.
If you encounter a goblin, you have to guess a number to beat it.
If you encounter a slime, you have to memorize a set of numbers, and repeat them backwards to beat it.
If you encounter a skeleton, you will have to type a given string before the time runs out to beat it.
If you encounter a golem, you will have to press space when the bar goes over the "+" to beat it.

If you find a chest, you are prompted to whether open it or not.
There will be mysterious items inside the chest, either good or bad.

You can win the game by reaching the ending point.
You lose when you run out of your life."""],0.03)
